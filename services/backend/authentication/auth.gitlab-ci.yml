variables:
  REGISTRY_USER: $CI_REGISTRY_USER
  REGISTRY_PASSWORD: $CI_REGISTRY_PASSWORD
  ACR: $CI_ACR
  AZ_PASSWORD: $CI_AZ_PASSWORD
  AZ_EMAIL: $CI_AZ_EMAIL

stages:
  - build
  - test
  - package
  - deploy

.auth-common:
  rules:
    - changes:
        - 'services/backend/authentication/**/*'

authentication-build:
  extends: .auth-common
  stage: build
  tags:
    - docker
  image: maven:3.9.6-eclipse-temurin-17-alpine
  script:
    - export TEST=$(git rev-parse --short HEAD)
    - echo "Commit hash $TEST"
    - cd services/backend/authentication
    - mvn clean compile

authentication-test:
  extends: .auth-common
  stage: test
  tags:
    - docker
  image: maven:3.9.6-eclipse-temurin-17-alpine
  script:
    - cd services/backend/authentication
    - mvn clean test

authentication-package:
  stage: package
  tags:
    - docker
  image: docker:20.10.12
  services:
    - docker:20.10.12-dind
  variables:
    PROFILE: "prod"
  before_script:
    - cd services/backend/authentication
    - export VERSION_TAG=$(cat pom.xml | grep -m1 "<version>" | sed -E 's/.*<version>(.+)<\/version>.*/\1/')
    - export COMMIT_HASH=$(git rev-parse --short HEAD)
    - export FULL_TAG="${VERSION_TAG}-${COMMIT_HASH}"
    - echo "Building version $FULL_TAG"
    - echo $FULL_TAG > authentication_version.txt
  script:
    - docker build --build-arg PROFILE=$PROFILE --build-arg APP_VERSION=$VERSION_TAG -t authentication:$FULL_TAG .
  artifacts:
    paths:
      - services/backend/authentication/authentication_version.txt
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      changes:
        - 'services/backend/authentication/**/*'

authentication-dependency-scan:
  stage: security-scan
  tags:
    - docker
  image:
    name: maven:3.9.6-eclipse-temurin-17-alpine
    entrypoint: [""]
  dependencies:
    - authentication-package
  script:
    - cd services/backend/authentication
    - mvn org.owasp:dependency-check-maven:9.2.0:check

authentication-security-scan:
  stage: security-scan
  tags:
    - docker
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  dependencies:
    - authentication-package
  before_script:
    - cd services/backend/authentication
  script:
    - export VERSION_TAG=$(cat authentication_version.txt)
    - echo "Scanning version $VERSION_TAG"
    - trivy image --exit-code 1 --severity HIGH,CRITICAL authentication:$VERSION_TAG
  artifacts:
    paths:
      - services/backend/authentication/authentication_version.txt

authentication-deploy-acr:
  stage: deploy
  tags:
    - docker
  image: docker:20.10.12
  services:
    - docker:20.10.12-dind
  dependencies:
    - authentication-package
  before_script:
    - cd services/backend/authentication
  script:
    - export VERSION_TAG=$(cat authentication_version.txt)
    - docker login $ACR -u $REGISTRY_USER -p $REGISTRY_PASSWORD
    - docker tag authentication:$VERSION_TAG $ACR/authentication:$VERSION_TAG
    - docker push $ACR/authentication:$VERSION_TAG
  artifacts:
    paths:
      - services/backend/authentication/authentication_version.txt
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      changes:
        - 'services/backend/authentication/**/*'

authentication-deploy-aks:
  stage: deploy
  tags:
    - docker
  image: mcr.microsoft.com/azure-cli
  before_script:
    - apk add --no-cache curl
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
  script:
    - cd services/backend/authentication
    - az login -u $AZ_EMAIL -p $AZ_PASSWORD
    - az account set --subscription "Azure for Students"
    - az aks get-credentials --resource-group BVB_Forum --name BVBAKS
    - kubectl apply -f authentication-deployment.yml
    - kubectl apply -f authentication-service.yml
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - 'services/backend/authentication/**/*'
