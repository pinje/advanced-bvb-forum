variables:
  REGISTRY_USER: $CI_REGISTRY_USER
  REGISTRY_PASSWORD: $CI_REGISTRY_PASSWORD
  ACR: $CI_ACR
  AZ_PASSWORD: $CI_AZ_PASSWORD
  AZ_EMAIL: $CI_AZ_EMAIL

stages:
  - build
  - test
  - package
  - security-scan
  - deploy

frontend-build:
  stage: build
  tags:
    - docker
  image: node:22-alpine
  script:
    - cd services/frontend
    - npm install
    - npm run build
  rules:
    - if: '$CI_COMMIT_BRANCH != "main"'
      changes:
        - 'services/frontend/**/*'

frontend-package:
  stage: package
  tags:
    - docker
  image: docker:20.10.12-git
  services:
    - docker:20.10.12-dind
  before_script:
    - cd services/frontend
    - export VERSION_TAG=1.0.0
    - echo "Extracted version $VERSION_TAG"
    - echo $VERSION_TAG > frontend_version.txt
  script:
    - docker build -t frontend:$VERSION_TAG .
  artifacts:
    paths:
      - services/frontend/frontend_version.txt
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      changes:
        - 'services/frontend/**/*'

#frontend-dependency-scan:
#  stage: security-scan
#  tags:
#    - docker
#  image:
#    name: maven:3.9.6-eclipse-temurin-17-alpine
#    entrypoint: [""]
#  dependencies:
#    - frontend-package
#  script:
#    - cd services/frontend
#    - mvn org.owasp:dependency-check-maven:9.2.0:check
#  rules:
#    - if: '$CI_COMMIT_BRANCH == "dev"'
#      changes:
#        - 'services/frontend/**/*'
#
#frontend-security-scan:
#  stage: security-scan
#  tags:
#    - docker
#  image:
#    name: aquasec/trivy:latest
#    entrypoint: [""]
#  dependencies:
#    - frontend-package
#  before_script:
#    - cd services/frontend
#  script:
#    - export VERSION_TAG=$(cat frontend_version.txt)
#    - echo "Scanning version $VERSION_TAG"
#    - trivy image --exit-code 1 --severity HIGH,CRITICAL frontend:$VERSION_TAG
#  artifacts:
#    paths:
#      - services/frontend/frontend_version.txt
#  rules:
#    - if: '$CI_COMMIT_BRANCH == "dev"'
#      changes:
#        - 'services/frontend/**/*'

frontend-deploy-acr:
  stage: deploy
  tags:
    - docker
  image: docker:20.10.12
  services:
    - docker:20.10.12-dind
  dependencies:
    - frontend-package
  before_script:
    - cd services/frontend
  script:
    - export VERSION_TAG=$(cat frontend_version.txt)
    - docker login $ACR -u $REGISTRY_USER -p $REGISTRY_PASSWORD
    - docker tag frontend:$VERSION_TAG $ACR/frontend:$VERSION_TAG
    - docker push $ACR/frontend:$VERSION_TAG
  artifacts:
    paths:
      - services/frontend/frontend_version.txt
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      changes:
        - 'services/frontend/**/*'

frontend-deploy-aks:
  stage: deploy
  tags:
    - docker
  image: mcr.microsoft.com/azure-cli
  before_script:
    - apk add --no-cache curl
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
  script:
    - cd services/frontend
    - az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
    - az account set --subscription $AZURE_SUBSCRIPTION_ID
    - az aks get-credentials --resource-group BVB_Forum --name BVBAKS
    - kubectl apply -f frontend-deployment.yml
    - kubectl apply -f frontend-service.yml
    - kubectl apply -f frontend-hpa.yml
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - 'services/frontend/**/*'